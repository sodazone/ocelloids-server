TODO
====
[x] Remove processing logic on new blocks
[x] Store bounded cache of new blocks on our database (binary Uint8Array)
[x] Processing logic on finalized blocks, retrieve from database (Smoldot best block peers problem)
[x] Continuous catch-up on finalized blocks stream, Smoldot skips finalized numbers (why?)
[x] Start up catch-up from finalized head in background, one-shot only on start, pass it to finalezed block processing logic
[x] Resilient catch-up logic, cases (1) stops catch-up in the middle (2) getBlock fails, retries (max retries and alert of unrecoverable gap?)
[x] Update subscriptions (API + logic)
[x] Allow updating control queries for senders and destinations
[x] Consider subscribe to new heads only on subscription, or a good strategy to clear DB (??)
[x] Implement XCM outcome in message
[] Notifications models and webhook client (retries etc.)
[] Throttle config (?)
[] Filtering of instructions (?)
[] Handle modifications in network configuration (?)
[x] Handle subscription exploding on network config change
[x] Support VMP messages 
[x] - DMP: only attempted + dmp queue + extrinsic params and instructions matching. if undecidable: notify undecidable set (block, txs, messages)
[x] - UMP: parachainSystem upward message sent w/ message hash parachainsystem (UpwardMessageSent)
[x] change status code for subs API errors
[x] Complete unique key deletions
[] General review, adjust logging etc.
[] Test coverage, docs (e.g. unique paths logic)

TO TEST
===
[] Handle smoldot panics
[x] Running with RPCs
[] DMP (smoldot)
[] UMP (smoldot)
[x] batched transfers
[] Handle subscription exploding on network config change

FUTURE
===
[] Smoldot DB checkpointing
[] Use SCALE instead of CBOR